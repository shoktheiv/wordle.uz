{"ast":null,"code":"var _jsxFileName = \"/Users/shohruh/Desktop/wordle.uz/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet targetWord = \"\";\nfunction App() {\n  _s();\n  const [guesses, setGuesses] = useState([]);\n  const [currentGuess, setCurrentGuess] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [wordList, setWordList] = useState([]);\n  const [usedKeys, setUsedKeys] = useState({});\n  const [fullWordList, setFullWordList] = useState([]);\n  const [notification, setNotification] = useState(\"\");\n  const [showTutorial, setShowTutorial] = useState(false);\n  useEffect(() => {\n    fetch(\"common_words.txt\").then(res => res.text()).then(text => {\n      const words = text.split(\"\\n\").map(word => word.trim().toLowerCase());\n      setWordList(words);\n      const randomIndex = Math.floor(Math.random() * words.length);\n      targetWord = words[randomIndex];\n    }).catch(err => console.error(\"Failed to load word list:\", err));\n  }, []);\n  useEffect(() => {\n    fetch(\"words.txt\").then(res => res.text()).then(text => {\n      const words = text.split(\"\\n\").map(word => word.trim().toLowerCase());\n      setFullWordList(words);\n    }).catch(err => console.error(\"Failed to load full word list:\", err));\n  }, []);\n  const uzbekLetters = [\"a\", \"b\", \"d\", \"e\", \"f\", \"g\", \"g‘\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"o‘\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"x\", \"y\", \"z\"];\n  const showNotification = message => {\n    setNotification(message);\n    if (navigator.vibrate) navigator.vibrate(200);\n    setTimeout(() => setNotification(\"\"), 2000);\n  };\n  useEffect(() => {\n    const handleKeyDown = event => {\n      const key = event.key.toLowerCase();\n      if (key === 'enter') {\n        handleEnter();\n      } else if (key === 'backspace') {\n        handleBackspace();\n      } else {\n        // Special cases for letters like \"o‘\" and \"g‘\"\n        if (key === \"o\" && event.code === \"Quote\") {\n          handleKeyPress(\"o‘\");\n        } else if (event.key === \"G\" && event.shiftKey) {\n          handleKeyPress(\"g‘\");\n        } else if (uzbekLetters.includes(key)) {\n          handleKeyPress(key);\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [currentGuess, guesses, isGameOver]);\n  const handleKeyPress = letter => {\n    if (isGameOver) return;\n    if (currentGuess.length < 5) {\n      setCurrentGuess(prev => [...prev, letter]);\n    }\n  };\n  const handleBackspace = () => {\n    if (isGameOver) return;\n    setCurrentGuess(prev => prev.slice(0, -1));\n  };\n\n  // Helper function for coloring logic\n  const getColoring = (guess, target) => {\n    const result = Array(5).fill(\"gray\");\n    const targetLetterCount = {};\n    for (let letter of target) {\n      targetLetterCount[letter] = (targetLetterCount[letter] || 0) + 1;\n    }\n\n    // First pass: mark greens\n    for (let i = 0; i < 5; i++) {\n      if (guess[i] === target[i]) {\n        result[i] = \"green\";\n        targetLetterCount[guess[i]]--;\n      }\n    }\n\n    // Second pass: mark yellows\n    for (let i = 0; i < 5; i++) {\n      if (result[i] === \"gray\" && target.includes(guess[i]) && targetLetterCount[guess[i]] > 0) {\n        result[i] = \"yellow\";\n        targetLetterCount[guess[i]]--;\n      }\n    }\n    return result;\n  };\n  const handleEnter = async () => {\n    if (isGameOver) return;\n    if (currentGuess.length !== 5) {\n      showNotification(\"5 harfdan iborat so‘z kiriting!\");\n      return;\n    }\n    const guessStr = currentGuess.join('').toLowerCase();\n    if (!fullWordList.includes(guessStr)) {\n      showNotification(\"So‘z ro‘yxatda yo‘q.\");\n      return;\n    }\n    const updatedGuesses = [...guesses, currentGuess];\n    setGuesses(updatedGuesses);\n    const coloring = getColoring(currentGuess, targetWord);\n    setUsedKeys(prevUsedKeys => {\n      const updated = {\n        ...prevUsedKeys\n      };\n      currentGuess.forEach((letter, idx) => {\n        const color = coloring[idx];\n        if (color === \"green\" || color === \"yellow\" && updated[letter] !== \"green\" || color === \"gray\" && !updated[letter]) {\n          updated[letter] = color;\n        }\n      });\n      return updated;\n    });\n    setCurrentGuess([]);\n    if (guessStr === targetWord) {\n      setIsGameOver(true);\n      showNotification(\"🎉 To‘g‘ri topdingiz!\");\n    } else if (updatedGuesses.length >= 6) {\n      setIsGameOver(true);\n      showNotification(`❌ Tugadi! So‘z: ${targetWord}`);\n    }\n  };\n  const getTileClass = (letter, index, guess) => {\n    if (!guesses.includes(guess)) return \"\";\n    const coloring = getColoring(guess, targetWord);\n    return coloring[index];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Wordle.uz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 24\n    }, this), showTutorial && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tutorial-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tutorial-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Qanday o\\u2018ynash kerak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"5 harfdan iborat so\\u2018zni 6 urinishda toping. Har bir urinishdan so\\u2018ng harflarning rangi ularning to\\u2018g\\u2018ri so\\u2018zga mos kelish-kelmasligini ko\\u2018rsatadi.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"green\",\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this), \" - Harf ham pozitsiyasi ham to\\u2018g\\u2018ri.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"yellow\",\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this), \" - Harf to\\u2018g\\u2018ri, lekin joylashuvi noto\\u2018g\\u2018ri.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gray\",\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this), \" - Harf so\\u2018zda yo\\u2018q.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowTutorial(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [...Array(6)].map((_, rowIdx) => {\n        const word = guesses[rowIdx] || (rowIdx === guesses.length ? currentGuess : []);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [...Array(5)].map((_, colIdx) => {\n            const letter = word[colIdx] || \"\";\n            const colorClass = guesses[rowIdx] ? getTileClass(letter, colIdx, word) : \"\";\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `tile ${colorClass}`,\n              children: letter\n            }, colIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this);\n          })\n        }, rowIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard-row\",\n        children: [\"q\", \"o'\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"].map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: usedKeys[letter],\n          onClick: () => handleKeyPress(letter),\n          children: letter\n        }, letter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard-row\",\n        children: [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"g'\"].map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: usedKeys[letter],\n          onClick: () => handleKeyPress(letter),\n          children: letter\n        }, letter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key-wide\",\n          onClick: handleBackspace,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"].map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: usedKeys[letter],\n          onClick: () => handleKeyPress(letter),\n          children: letter\n        }, letter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key-wide\",\n          onClick: handleEnter,\n          children: \"\\u21B5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"theme-toggle\",\n      onClick: () => document.body.classList.toggle(\"light-mode\"),\n      children: \"\\u2600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"help-button\",\n      onClick: () => setShowTutorial(true),\n      children: \"?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7/cz35vpOoQAWQUgH8zuT/694Kw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","targetWord","App","_s","guesses","setGuesses","currentGuess","setCurrentGuess","isGameOver","setIsGameOver","wordList","setWordList","usedKeys","setUsedKeys","fullWordList","setFullWordList","notification","setNotification","showTutorial","setShowTutorial","fetch","then","res","text","words","split","map","word","trim","toLowerCase","randomIndex","Math","floor","random","length","catch","err","console","error","uzbekLetters","showNotification","message","navigator","vibrate","setTimeout","handleKeyDown","event","key","handleEnter","handleBackspace","code","handleKeyPress","shiftKey","includes","window","addEventListener","removeEventListener","letter","prev","slice","getColoring","guess","target","result","Array","fill","targetLetterCount","i","guessStr","join","updatedGuesses","coloring","prevUsedKeys","updated","forEach","idx","color","getTileClass","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_","rowIdx","colIdx","colorClass","document","body","classList","toggle","_c","$RefreshReg$"],"sources":["/Users/shohruh/Desktop/wordle.uz/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nlet targetWord = \"\";\n\nfunction App() {\n  const [guesses, setGuesses] = useState([]);\n  const [currentGuess, setCurrentGuess] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [wordList, setWordList] = useState([]);\n  const [usedKeys, setUsedKeys] = useState({});\n  const [fullWordList, setFullWordList] = useState([]);\n  const [notification, setNotification] = useState(\"\");\n  const [showTutorial, setShowTutorial] = useState(false);\n\nuseEffect(() => {\n  fetch(\"common_words.txt\")\n    .then(res => res.text())\n    .then(text => {\n      const words = text.split(\"\\n\").map(word => word.trim().toLowerCase());\n      setWordList(words);\n      const randomIndex = Math.floor(Math.random() * words.length);\n      targetWord = words[randomIndex];\n    })\n    .catch(err => console.error(\"Failed to load word list:\", err));\n}, []);\n\nuseEffect(() => {\n  fetch(\"words.txt\")\n    .then(res => res.text())\n    .then(text => {\n      const words = text.split(\"\\n\").map(word => word.trim().toLowerCase());\n      setFullWordList(words);\n    })\n    .catch(err => console.error(\"Failed to load full word list:\", err));\n}, []);\n\n  const uzbekLetters = [\n    \"a\", \"b\", \"d\", \"e\", \"f\", \"g\", \"g‘\", \"h\", \"i\", \"j\", \"k\", \"l\",\n    \"m\", \"n\", \"o\", \"o‘\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"x\", \"y\", \"z\"\n  ];\n\n  const showNotification = (message) => {\n    setNotification(message);\n    if (navigator.vibrate) navigator.vibrate(200);\n    setTimeout(() => setNotification(\"\"), 2000);\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      const key = event.key.toLowerCase();\n\n      if (key === 'enter') {\n        handleEnter();\n      } else if (key === 'backspace') {\n        handleBackspace();\n      } else {\n        // Special cases for letters like \"o‘\" and \"g‘\"\n        if (key === \"o\" && event.code === \"Quote\") {\n          handleKeyPress(\"o‘\");\n        } else if (event.key === \"G\" && event.shiftKey) {\n          handleKeyPress(\"g‘\");\n        } else if (uzbekLetters.includes(key)) {\n          handleKeyPress(key);\n        }\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [currentGuess, guesses, isGameOver]);\n\n  const handleKeyPress = (letter) => {\n    if (isGameOver) return;\n    if (currentGuess.length < 5) {\n      setCurrentGuess(prev => [...prev, letter]);\n    }\n  };\n\n  const handleBackspace = () => {\n    if (isGameOver) return;\n    setCurrentGuess(prev => prev.slice(0, -1));\n  };\n\n  // Helper function for coloring logic\n  const getColoring = (guess, target) => {\n    const result = Array(5).fill(\"gray\");\n    const targetLetterCount = {};\n\n    for (let letter of target) {\n      targetLetterCount[letter] = (targetLetterCount[letter] || 0) + 1;\n    }\n\n    // First pass: mark greens\n    for (let i = 0; i < 5; i++) {\n      if (guess[i] === target[i]) {\n        result[i] = \"green\";\n        targetLetterCount[guess[i]]--;\n      }\n    }\n\n    // Second pass: mark yellows\n    for (let i = 0; i < 5; i++) {\n      if (\n        result[i] === \"gray\" &&\n        target.includes(guess[i]) &&\n        targetLetterCount[guess[i]] > 0\n      ) {\n        result[i] = \"yellow\";\n        targetLetterCount[guess[i]]--;\n      }\n    }\n\n    return result;\n  };\n\n  const handleEnter = async () => {\n    if (isGameOver) return;\n    if (currentGuess.length !== 5) {\n      showNotification(\"5 harfdan iborat so‘z kiriting!\");\n      return;\n    }\n\n    const guessStr = currentGuess.join('').toLowerCase();\n\n    if (!fullWordList.includes(guessStr)) {\n      showNotification(\"So‘z ro‘yxatda yo‘q.\");\n      return;\n    }\n\n    const updatedGuesses = [...guesses, currentGuess];\n    setGuesses(updatedGuesses);\n\n    const coloring = getColoring(currentGuess, targetWord);\n    setUsedKeys(prevUsedKeys => {\n      const updated = { ...prevUsedKeys };\n      currentGuess.forEach((letter, idx) => {\n        const color = coloring[idx];\n        if (\n          color === \"green\" ||\n          (color === \"yellow\" && updated[letter] !== \"green\") ||\n          (color === \"gray\" && !updated[letter])\n        ) {\n          updated[letter] = color;\n        }\n      });\n      return updated;\n    });\n\n    setCurrentGuess([]);\n\n    if (guessStr === targetWord) {\n      setIsGameOver(true);\n      showNotification(\"🎉 To‘g‘ri topdingiz!\");\n    } else if (updatedGuesses.length >= 6) {\n      setIsGameOver(true);\n      showNotification(`❌ Tugadi! So‘z: ${targetWord}`);\n    }\n  };\n\n  const getTileClass = (letter, index, guess) => {\n    if (!guesses.includes(guess)) return \"\";\n    const coloring = getColoring(guess, targetWord);\n    return coloring[index];\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Wordle.uz</h1>\n      {notification && <div className=\"notification\">{notification}</div>}\n      {}\n      {showTutorial && (\n        <div className=\"tutorial-panel\">\n          <div className=\"tutorial-content\">\n            <h2>Qanday o‘ynash kerak</h2>\n            <p>5 harfdan iborat so‘zni 6 urinishda toping. Har bir urinishdan so‘ng harflarning rangi ularning to‘g‘ri so‘zga mos kelish-kelmasligini ko‘rsatadi.</p>\n            <ul>\n              <li><span className=\"green\">S</span> - Harf ham pozitsiyasi ham to‘g‘ri.</li>\n              <li><span className=\"yellow\">S</span> - Harf to‘g‘ri, lekin joylashuvi noto‘g‘ri.</li>\n              <li><span className=\"gray\">S</span> - Harf so‘zda yo‘q.</li>\n            </ul>\n            <button onClick={() => setShowTutorial(false)}>X</button>\n          </div>\n        </div>\n      )}\n      <div className=\"board\">\n        {[...Array(6)].map((_, rowIdx) => {\n          const word = guesses[rowIdx] || (rowIdx === guesses.length ? currentGuess : []);\n          return (\n            <div className=\"row\" key={rowIdx}>\n              {[...Array(5)].map((_, colIdx) => {\n                const letter = word[colIdx] || \"\";\n                const colorClass = guesses[rowIdx] ? getTileClass(letter, colIdx, word) : \"\";\n                return (\n                  <div className={`tile ${colorClass}`} key={colIdx}>\n                    {letter}\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"keyboard\">\n        <div className=\"keyboard-row\">\n          {[\"q\", \"o'\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"].map((letter) => (\n            <button key={letter} className={usedKeys[letter]} onClick={() => handleKeyPress(letter)}>\n              {letter}\n            </button>\n          ))}\n        </div>\n        <div className=\"keyboard-row\">\n          {[\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"g'\"].map((letter) => (\n            <button key={letter} className={usedKeys[letter]} onClick={() => handleKeyPress(letter)}>\n              {letter}\n            </button>\n          ))}\n        </div>\n        <div className=\"keyboard-row\">\n          <button className=\"key-wide\" onClick={handleBackspace}>←</button>\n          {[\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"].map((letter) => (\n            <button key={letter} className={usedKeys[letter]} onClick={() => handleKeyPress(letter)}>\n              {letter}\n            </button>\n          ))}\n          <button className=\"key-wide\" onClick={handleEnter}>↵</button>\n        </div>\n      </div>\n      <button\n        className=\"theme-toggle\"\n        onClick={() => document.body.classList.toggle(\"light-mode\")}\n      >\n        ☀\n      </button>\n      <button\n        className=\"help-button\"\n        onClick={() => setShowTutorial(true)}\n      >\n        ?\n      </button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}